# 3.(2 балла, 1+1)
# На вход подается два словаря d1 и d2 с карточками продуктов (см. пример ниже).
# Необходимо объединить оба словаря в один и удалить дубликаты значений (values в терминах метода dict()),
# если они есть, и вывести итоговый словарь. За объединение словаря 1 балл и еще 1 балл за корректное удаление дубликатов.
# При простом объединении словарей, если совпадают и ключи и значения, словарь сам убирает дубликаты.
# В этом плане он похож на set(). Но наш случай не настолько тривиальный, у нас основные ключи разные, а значения,
# то есть вложенные словари, могут быть одинаковыми. Вот как раз от одинаковых значений (вложенных словарей) надо избавиться.
# Какой в итоге ему ключ будет присвоен из дубликатов - не имеет значения.

d1 = \
{
 'Item1': {'Name': 'Cake', 'Price': 20},
 'Item2': {'Name': 'Pie', 'Price': 10},
 'Item3': {'Name': 'Chocobar', 'Price': 5}
}
d2 = \
{
 'Item4': {'Name': 'Brownie', 'Price': 15},
 'Item5': {'Name': 'Cake', 'Price': 20}
}

output = d1.copy()

for key, value in d1.items():
    if value in d2.values():
        output.pop(key)
        output.update(d2)
print(output)
#Для версии 3.x создана копия словаря дабы не возникало ошибки RuntimeError: dictionary changed size during iteration.
#В python 2.x нет проблем с изменением размерности итерируемого объекта, поэтому копию можно не создавать.









